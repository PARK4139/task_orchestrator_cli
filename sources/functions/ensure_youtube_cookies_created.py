import os

import logging
from sources.objects.task_orchestrator_cli_files import F_YOUTUBE_COOKIES_TXT


def ensure_youtube_cookies_created():
    # return ensure_youtube_cookies_created_v1()
    # return ensure_youtube_cookies_created_v2()
    return ensure_youtube_cookies_created_v3()


def ensure_youtube_cookies_created_v1():
    """
    YouTube 쿠키 파일을 생성하는 함수
    
    Returns:
        bool: 쿠키 파일 생성 성공 여부
    """
    try:
        # 쿠키 파일이 이미 존재하는지 확인
        if os.path.exists(F_YOUTUBE_COOKIES_TXT):
            logging.debug(f"YouTube 쿠키 파일이 이미 존재합니다: {F_YOUTUBE_COOKIES_TXT}")
            return True

        # 쿠키 파일 생성 안내
        logging.debug("YouTube 쿠키 파일을 생성해야 합니다.")
        logging.debug("다음 단계를 따라하세요:")
        logging.debug("1. 브라우저에서 YouTube에 로그인")
        logging.debug("2. 개발자 도구 열기 (F12)")
        logging.debug("3. Application/Storage 탭에서 Cookies 확인")
        logging.debug("4. 쿠키를 Netscape 형식으로 내보내기")
        logging.debug(f"5. 파일을 다음 경로에 저장: {F_YOUTUBE_COOKIES_TXT}")

        # 쿠키 파일 템플릿 생성
        cookie_template = """# Netscape HTTP Cookie File
# This file is generated by yt-dlp.  Do not edit.

.youtube.com	TRUE	/	TRUE	1735689600	VISITOR_INFO1_LIVE
.youtube.com	TRUE	/	TRUE	1735689600	LOGIN_INFO
.youtube.com	TRUE	/	TRUE	1735689600	SID
.youtube.com	TRUE	/	TRUE	1735689600	HSID
.youtube.com	TRUE	/	TRUE	1735689600	SSID
.youtube.com	TRUE	/	TRUE	1735689600	APISID
.youtube.com	TRUE	/	TRUE	1735689600	SAPISID
.youtube.com	TRUE	/	TRUE	1735689600	__Secure-1PSID
.youtube.com	TRUE	/	TRUE	1735689600	__Secure-3PSID
.youtube.com	TRUE	/	TRUE	1735689600	__Secure-1PAPISID
.youtube.com	TRUE	/	TRUE	1735689600	__Secure-3PAPISID
"""

        # 쿠키 파일 생성
        with open(F_YOUTUBE_COOKIES_TXT, 'w', encoding='utf-8') as f:
            f.write(cookie_template)

        logging.debug(f"쿠키 파일 템플릿이 생성되었습니다: {F_YOUTUBE_COOKIES_TXT}")
        logging.debug("️ 실제 쿠키 값으로 교체해야 합니다.")

        return True

    except Exception as e:
        logging.debug(f"쿠키 파일 생성 실패: {e}")
        return False


def get_youtube_cookies_help():
    """
    YouTube 쿠키 생성 도움말을 출력하는 함수
    """
    help_text = """
 YouTube 쿠키 생성 방법:

1. 브라우저에서 YouTube에 로그인
2. 개발자 도구 열기 (F12)
3. Application/Storage 탭에서 Cookies 확인
4. 쿠키를 Netscape 형식으로 내보내기
5. 파일을 다음 경로에 저장: {cookie_file}

 쿠키 브라우저 확장 프로그램 사용:
- Chrome: "Get cookies.txt" 확장 프로그램
- Firefox: "cookies.txt" 확장 프로그램

 유용한 링크:
- https://github.com/yt-dlp/yt-dlp/wiki/FAQ#how-do-i-pass-cookies-to-yt-dlp
- https://github.com/yt-dlp/yt-dlp/wiki/Extractors#exporting-youtube-cookies
""".format(cookie_file=F_YOUTUBE_COOKIES_TXT)

    logging.debug(help_text)
    get_youtube_cookies_help()


def ensure_youtube_cookies_created_v2():
    import textwrap

    from sources.objects.task_orchestrator_cli_directories import D_TASK_ORCHESTRATOR_CLI_SENSITIVE

    import logging
    from sources.objects.task_orchestrator_cli_files import F_CHORME_YOUTUBE_COOKIE
    file_cookie = F_CHORME_YOUTUBE_COOKIE
    logging.debug("️ 쿠키 파일이 없습니다. 연령 제한 동영상은 다운로드할 수 없을 수 있습니다.")
    logging.debug(f"쿠키 파일 경로: {file_cookie}")
    logging.debug("Chrome에서 YouTube에 로그인한 후 쿠키를 내보내주세요.")

    cookie_guide = textwrap.dedent(f"""
                    쿠키 파일 생성 방법:
                    1. Chrome에서 YouTube에 로그인
                    2. 확장 프로그램 'Get cookies.txt' 설치
                    3. YouTube 페이지에서 쿠키 내보내기
                    4. 파일명을 'chrome_youtube_cookies.txt'로 저장
                    5. {D_TASK_ORCHESTRATOR_CLI_SENSITIVE} 폴더에 복사
                """).lstrip()
    logging.debug(cookie_guide)


def ensure_youtube_cookies_created_v3():
    import logging
    from sources.functions.ensure_youtube_cookies_managed import ensure_youtube_cookies_managed
    from resources.test_youtube_cookies_system import test_cookie_validation

    try:
        # 쿠키 관리 실행
        success = ensure_youtube_cookies_managed()

        if success:
            # 쿠키 유효성 테스트
            test_result = test_cookie_validation()
            if test_result:
                logging.debug("모든 쿠키 관리 작업이 성공적으로 완료되었습니다.")
            else:
                logging.debug("️ 쿠키는 생성되었지만 유효성 테스트에 실패했습니다.")
        else:
            logging.debug("쿠키 관리에 실패했습니다.")

    except Exception as e:
        import traceback
        logging.debug(f"예상치 못한 오류: {e}")
        traceback.print_exc()

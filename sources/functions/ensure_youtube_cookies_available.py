def ensure_youtube_cookies_available():
    """
    YouTube 쿠키가 사용 가능한지 확인하고, 필요시 자동으로 생성하는 함수
    
    Returns:
        bool: 쿠키 사용 가능 여부
    """

    import logging
    from sources.objects.task_orchestrator_cli_files import F_YOUTUBE_COOKIES_TXT
    from sources.functions.save_chrome_youtube_cookies_to_f import save_chrome_youtube_cookies_to_f
    from sources.functions.ensure_youtube_cookies_created import ensure_youtube_cookies_created, get_youtube_cookies_help
    from sources.functions.ensure_youtube_login_via_selenium import ensure_youtube_login_via_selenium
    import os
    try:
        # n. 쿠키 파일이 이미 존재하는지 확인
        if os.path.exists(F_YOUTUBE_COOKIES_TXT):
            file_size = os.path.getsize(F_YOUTUBE_COOKIES_TXT)
            if file_size > 100:  # 파일이 의미있는 크기인지 확인
                logging.debug(f"YouTube 쿠키 파일이 존재합니다: {F_YOUTUBE_COOKIES_TXT}")
                logging.debug(f"파일 크기: {file_size} bytes")
                return True
            else:
                logging.debug(f"️ 쿠키 파일이 너무 작습니다: {file_size} bytes")

        # n. Chrome에서 쿠키 자동 추출 시도
        logging.debug("Chrome에서 YouTube 쿠키를 자동으로 추출합니다...")
        if save_chrome_youtube_cookies_to_f():
            return True

        # n. Selenium을 사용한 자동 로그인 시도
        logging.debug("Selenium을 사용한 YouTube 자동 로그인을 시도합니다...")
        if ensure_youtube_login_via_selenium():
            return True

        # n. 자동 추출 실패 시 수동 생성 안내
        logging.debug("️ 자동 쿠키 추출에 실패했습니다.")
        logging.debug("수동으로 쿠키를 생성하겠습니다...")

        if ensure_youtube_cookies_created():
            get_youtube_cookies_help()
            logging.debug("쿠키 파일을 수동으로 생성한 후 다시 시도해주세요.")
            return False  # 수동 생성은 완료되었지만 실제 쿠키는 없음

        # n. 최소한의 쿠키 파일 생성
        try:
            with open(F_YOUTUBE_COOKIES_TXT, 'w', encoding='utf-8') as f:
                f.write("# Netscape HTTP Cookie File\n")
                f.write("# This file is generated by yt-dlp. Do not edit.\n\n")
                f.write("# 기본 쿠키 템플릿 - 실제 쿠키 값으로 교체 필요\n")
                f.write(".youtube.com\tTRUE\t/\tFALSE\t1735689600\tVISITOR_INFO1_LIVE\t\n")
            logging.debug(f"기본 쿠키 파일이 생성되었습니다: {F_YOUTUBE_COOKIES_TXT}")
            logging.debug("️ 실제 쿠키 값으로 교체해야 합니다.")
        except Exception as e:
            logging.debug(f"쿠키 파일 생성 실패: {e}")

        return False

    except Exception as e:
        logging.debug(f"쿠키 확인 중 오류 발생: {e}")
        return False


def get_youtube_cookies_status():
    import os

    import logging
    from sources.objects.task_orchestrator_cli_files import F_YOUTUBE_COOKIES_TXT

    status = {
        'file_exists': False,
        'file_size': 0,
        'auto_extraction_available': False,
        'recommendation': ''
    }

    try:
        # 파일 존재 여부 확인
        if os.path.exists(F_YOUTUBE_COOKIES_TXT):
            status['file_exists'] = True
            status['file_size'] = os.path.getsize(F_YOUTUBE_COOKIES_TXT)

        # browser_cookie3 사용 가능 여부 확인
        try:
            import browser_cookie3
            status['auto_extraction_available'] = True
        except ImportError:
            status['auto_extraction_available'] = False

        # 권장사항 설정
        if status['file_exists'] and status['file_size'] > 100:
            status['recommendation'] = 'ready'
        elif status['auto_extraction_available']:
            status['recommendation'] = 'auto_extract'
        else:
            status['recommendation'] = 'manual_create'

        return status

    except Exception as e:
        logging.debug(f"쿠키 상태 확인 중 오류: {e}")
        return status


def refresh_youtube_cookies():
    import os

    import logging
    from sources.functions.save_chrome_youtube_cookies_to_f import save_chrome_youtube_cookies_to_f
    from sources.objects.task_orchestrator_cli_files import F_YOUTUBE_COOKIES_TXT

    try:
        # 기존 쿠키 파일 백업
        if os.path.exists(F_YOUTUBE_COOKIES_TXT):
            backup_path = F_YOUTUBE_COOKIES_TXT + '.backup'
            os.rename(F_YOUTUBE_COOKIES_TXT, backup_path)
            logging.debug(f"기존 쿠키 파일을 백업했습니다: {backup_path}")

        # 새 쿠키 추출
        logging.debug("YouTube 쿠키를 새로고침합니다...")
        return save_chrome_youtube_cookies_to_f()

    except Exception as e:
        logging.debug(f"쿠키 새로고침 실패: {e}")
        return False
